void PLDI09_cyclic(int id, maxId) {
   assume(0 ≤ id < maxId);
   int tmp := id+1;
   while(tmp != id && nondet)
      if (tmp ≤ maxId)
         tmp := tmp + 1;
      else tmp := 0;
}

void PLDI09_Example2() {
  assume(n>0 ∧ m>0);
  v1:= n; v2:= 0;
  while (v1>0 && nondet) {
    if (v2<m) { v2++; v1--; }
    else { v2 := 0; }
  }
}

void PLDI09_Example3() {
  assume(0<m<n);
  i := 0; j := 0;
  while (i<n && nondet) {
    if (j<m) j++;
    else j :=0; i++;
  }
}

void PLDI09_Example4() {
  assume(0<m<n);
  i := n;
  while (i>0 && nondet) {
    if (i<m) i--;
    else i := i - m;
  }
}

void PLDI09_Example5() {
  assume(0<m<n);
  i := m;
  while (0 < i < n) {
    if (dir==fwd) i++ else i —;
  }
}
